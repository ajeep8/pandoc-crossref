name: Haskell CI

on: [push]

jobs:
  build:
    strategy:
      matrix:
        #os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest]
        pandocver: ["2.18"]
        ghcver: ['8.10.7']
        include:
        - os: ubuntu-latest
          container: 'lierdakil/alpine-haskell:8.10.7-pwsh'
          extra-options: '--constraint "cryptonite -integer-gmp"'
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    steps:
    - uses: actions/checkout@v2
    - uses: haskell/actions/setup@v1
      if: '!(matrix.container)'
      with:
        ghc-version: ${{matrix.ghcver}}
        cabal-version: '3.4'
    - name: Cabal init
      shell: pwsh
      run: |
        $store = Join-Path $pwd ".cabal-store"
        New-Item -ItemType Directory -Force "$store"
        cabal user-config init --force --augment="store-dir: $store" `
          --augment="install-method: copy"
    - name: Cabal update
      run: cabal v2-update
    - name: Copy build config
      shell: bash
      run: cp misc/${{runner.os}}-build-cabal-config ./cabal.project
    - name: install ncurses-static
      if: runner.os == 'Linux'
      run: apk add --update --no-cache ncurses-static
    - name: Cabal configure
      run: cabal v2-configure --constraint pandoc==${{matrix.pandocver}} --constraint zip-archive'>='0.4.2.1 --enable-tests ${{matrix.extra-options}}
    - uses: actions/cache@v2
      with:
        path: .cabal-store
        key: r2-${{runner.os}}-${{matrix.ghcver}}-${{matrix.pandocver}}-${{hashFiles('pandoc-crossref.cabal')}}-${{hashFiles('dist-newstyle/cache/plan.json')}}
        restore-keys: |
          r2-${{runner.os}}-${{matrix.ghcver}}-${{matrix.pandocver}}-${{hashFiles('pandoc-crossref.cabal')}}-${{hashFiles('dist-newstyle/cache/plan.json')}}
          r2-${{runner.os}}-${{matrix.ghcver}}-${{matrix.pandocver}}-${{hashFiles('pandoc-crossref.cabal')}}
          r2-${{runner.os}}-${{matrix.ghcver}}-${{matrix.pandocver}}
    - shell: bash
      run: |
        rm -rvf .cabal-store/ghc-${{matrix.ghcver}}/pandoc-crossref-* || true
        rm -rvf .cabal-store/ghc-${{matrix.ghcver}}/pandoc-crossr_-* || true
        rm -rvf .cabal-store/ghc-${{matrix.ghcver}}/pndc-crssrf-* || true
        ls .cabal-store/ghc-${{matrix.ghcver}}/ || true
    - name: Install dependencies
      run: cabal v2-build --only-dependencies
    - name: Build
      run: cabal v2-build
    - name: Run tests
      run: cabal v2-test
    - name: Install
      shell: bash
      run: |
        mkdir pandoc-crossref-${{runner.os}}
        export GIT_DIR="$PWD/.git"
        cabal v2-install --installdir=$PWD/pandoc-crossref-${{runner.os}}
    - name: Make manpage
      if: runner.os == 'Linux'
      run: |
        cabal v2-install --installdir="$HOME" pandoc
        "$HOME/pandoc" -s -t man docs/index.md -o pandoc-crossref-${{runner.os}}/pandoc-crossref.1
    - name: Get Version
      shell: bash
      id: get_version
      run: |
        cd pandoc-crossref-${{runner.os}}/
        case "${{runner.os}}" in
        Windows)
            VERSION="$(./pandoc-crossref.exe --version)"
            ;;
        *)  chmod +x pandoc-crossref
            VERSION="$(./pandoc-crossref --version)"
            ;;
        esac
        echo "$VERSION"
        echo "$VERSION" > version.txt
    - uses: actions/upload-artifact@v2
      with:
        name: ${{runner.os}}-build
        path: pandoc-crossref-${{runner.os}}
    - shell: bash
      run: |
        rm -rvf .cabal-store/ghc-${{matrix.ghcver}}/pandoc-crossref-*
        rm -rvf .cabal-store/ghc-${{matrix.ghcver}}/pandoc-crossr_-*
        rm -rvf .cabal-store/ghc-${{matrix.ghcver}}/pndc-crssrf-*

  release:
    needs: [build]
    runs-on: ubuntu-latest
    container: alpine:3.15.0
    steps:
    - run: |
        echo 'http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories
        apk add --update --no-cache p7zip hub upx bash tar xz
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2

    - name: copy file via ssh password
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.TRAVIS_HOST }}
        username: ${{ secrets.TRAVIS_USERNAME }}
        key: ${{ secrets.TRAVIS_KEY }}
        #        passphrase: ${{ secrets.PASSPHRASE }}
        port: ${{ secrets.TRAVIS_PORT }}
        source: "Linux-build/*"
        target: "~/pandoc-crossref/cabal/"

  build-stack:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pandocver: ["2.18"]
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        wget https://get.haskellstack.org/stable/linux-x86_64.tar.gz
        tar zxf linux-x86_64.tar.gz
        mv stack-*/stack ./
        chmod +x ./stack
    - uses: actions/cache@v1
      with:
        path: /home/runner/.stack
        key: ${{ runner.os }}-stack
    - name: Build and test
      run: ./stack build --test
    - name: Verify version
      shell: bash
      run: |
        stack exec -- pandoc-crossref --version | grep -q 'Pandoc v${{matrix.pandocver}}'
    - name: copy file via ssh password
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.TRAVIS_HOST }}
        username: ${{ secrets.TRAVIS_USERNAME }}
        key: ${{ secrets.TRAVIS_KEY }}
        #        passphrase: ${{ secrets.PASSPHRASE }}
        port: ${{ secrets.TRAVIS_PORT }}
        source: "/home/runner/work/pandoc-crossref/pandoc-crossref/.stack-work/install/*"
        target: "~/pandoc-crossref/stack/"
